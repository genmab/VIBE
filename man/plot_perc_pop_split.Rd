% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_perc_pop_split.R
\name{plot_perc_pop_split}
\alias{plot_perc_pop_split}
\title{Plot percentage of samples per quadrant or Quadrant of interest (QOI)}
\usage{
plot_perc_pop_split(
  df,
  target1,
  target2,
  threshold_method = c("median", "mean", "Q3"),
  QOI = c("Q1", "Q2", "Q3", "Q4"),
  order = c("T", "F"),
  dataset = "Dataset",
  grouping_var = NA,
  plot_groups = NA,
  splitting_var = NA
)
}
\arguments{
\item{df}{the dataframe with TCGA and GTEX data.}

\item{target1}{Official gene symbol of gene 1}

\item{target2}{Official gene symbol of gene 2}

\item{threshold_method}{Threshold method to use; median or mean or Q3 (75th quantile)}

\item{QOI}{Quadrant of interest among 4 quadrants (Q1, Q2, Q3 OR Q4)}

\item{order}{True or False to sort the a axis in decreasing order ofr the quadrant of interest (Will not work for all quadrants)}

\item{dataset}{Name of your dataset for captioning}

\item{grouping_var}{column name which you want to group data by (intr if left to NA)}

\item{plot_groups}{Character vector with values you wish to include in the plot, threshold will be calculated for target1 and target2 on all data in df. plot_groups values must be present in the grouping_var column.}

\item{splitting_var}{column name of column that will be used to create subgroups, \%of samples above threshold and bars will be done for each unique combination of grouping_var and splitting_var}
}
\value{
the dataframe with percentage of samples per quadrant or Quadrant of interest (QOI)
}
\description{
Plot percentage of samples per quadrant or Quadrant of interest (QOI)
}
\examples{
# prepare data
data("VIBE_data")
df_harmonized = harmonize_df(df = VIBE_data,
                            col_patientid = "patient_no",
                          col_sampleid = "analysis",
                          col_indication = "tumor",
                          col_treatment = "treatment_flag",
                          col_symbol = "gene",
                          col_value = "log2_tpm",
                          unit = "tpm",
                          keep_extra_cols = c("database"))


# example1: without splitting up x-axis groups
plot_perc_pop_split(df = df_harmonized, target1 = "Immune target", target2 = "Tumor target",
                   threshold_method = "median", QOI = "Q1", order = "F", 
                   dataset = "VIBE dummy data (not real data!)")
# example2: split based on database & group x-axis by indication
plot_perc_pop_split(df = df_harmonized, target1 = "Immune target", target2 = "Tumor target",
                   threshold_method = "median", QOI = "Q1", order = "T", 
                   dataset = "VIBE dummy data (not real data!)",
                   grouping_var = "indication",
                   splitting_var = "database")

# example3: up to 9 unique splitting_var groups can be plotted

groups_9 <- paste("group", c(1:9))
set.seed(42)
df_extra_groups <- dplyr::ungroup(dplyr::mutate(dplyr::group_by(df_harmonized, patientid),
                                groups = sample(groups_9, size = 1)))

plot_perc_pop_split(df = df_extra_groups, target1 = "Immune target", target2 = "Tumor target",
                   threshold_method = "median", QOI = "Q1", order = "T", 
                   dataset = "VIBE dummy data (not real data!)",
                   grouping_var = "indication",
                   plot_groups = c("PDAC", "CERV"),
                   splitting_var = "groups")

}
