% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap_composite_scores.R
\name{heatmap_composite_scores}
\alias{heatmap_composite_scores}
\title{Get composite scores when compared between target when compared with other gene/pathway}
\usage{
heatmap_composite_scores(
  df,
  target1,
  target2_list,
  QOI = c("Q1", "Q2", "Q3", "Q4", "all"),
  threshold_method = c("median", "mean", "Q3"),
  grouping_var = NA,
  filter_threshold = NA,
  reverse = T,
  order_gene = NA
)
}
\arguments{
\item{df}{dataframe with expression values for each indication}

\item{target1}{Official gene symbol of gene 1}

\item{target2_list}{Official list of gene symbols}

\item{QOI}{Which of the four quadrants are of interest for the question; Q1 (Top-left; high-low); Q2 (Top-right; high-high); Q3 (bottom-left; low-high) and Q4 (bottom right; low-low)}

\item{threshold_method}{Threshold method to use; median or mean or Q3 (75th quantile)}

\item{grouping_var}{groups object based on this variable; intr if not provided}

\item{filter_threshold}{threshold for selecting rows relevant in terms of composite scores}

\item{reverse}{if the plotted categories should be reversed. The horizontal and vertical axes will be flipped as well.}

\item{order_gene}{the gene column can be used for sorting the axes.}
}
\value{
dataframe with composite scores
}
\description{
Get composite scores when compared between target when compared with other gene/pathway
}
\examples{
# prepare data
data("VIBE_data")
df_harmonized = harmonize_df(df = VIBE_data,
                            col_patientid = "patient_no",
                          col_sampleid = "analysis",
                          col_indication = "tumor",
                          col_treatment = "treatment_flag",
                          col_symbol = "gene",
                          col_value = "log2_tpm",
                          unit = "tpm",
                          keep_extra_cols = c("database"))


# Define target1 and the list of genes to compare
target1 <- "Immune target"
target2_list <- c("Gene 1","Gene 2","Gene 3","Gene 4","Gene 5","Gene 6","Gene 7","Gene 8","Gene 9","Gene 10")

# example1: obtain heatmap of composite scores for Q2 quadrant for each comparison for default grouping var "intr"
heatmap_composite_scores(df_harmonized, target1, target2_list,
                    QOI = "Q2",
                    threshold_method = "median")
# example2: obtain heatmap of composite scores for Q2 quadrant for each comparison for different grouping variable
heatmap_composite_scores(df_harmonized, target1, target2_list,
                    QOI = "Q2",
                    grouping_var="indication",
                    threshold_method = "median")

# example3: Heatmap filtered based on threshold of composite score 30 in any of the the grouping variables
heatmap_composite_scores(df_harmonized, target1, target2_list,
                    QOI = "Q2",
                    threshold_method = "median",
                    filter_threshold = 30)

# example4: Heatmap filtered based on threshold of composite score 30 in any of the the grouping variables ordered by gene
heatmap_composite_scores(df_harmonized, target1, target2_list,
                    QOI = "Q2",
                    threshold_method = "median",
                    filter_threshold = 30,
                    order_gene = "Gene.9")


}
